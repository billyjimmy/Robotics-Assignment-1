{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nimport math\nimport random\nfrom vexcode_vr import *\n\n# Brain should be defined by default\nbrain=Brain()\n\ndrivetrain = Drivetrain(\"drivetrain\", 0)\npen = Pen(\"pen\", 8)\npen.set_pen_width(THIN)\nleft_bumper = Bumper(\"leftBumper\", 2)\nright_bumper = Bumper(\"rightBumper\", 3)\nfront_eye = EyeSensor(\"frontEye\", 4)\ndown_eye = EyeSensor(\"downEye\", 5)\nfront_distance = Distance(\"frontdistance\", 6)\ndistance = front_distance\nmagnet = Electromagnet(\"magnet\", 7)\nlocation = Location(\"location\", 9)\n\n#endregion VEXcode Generated Robot Configuration\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode VR Python Project\n# \n# ------------------------------------------\n\n# Add project code in \"main\"\ndef main():\n\n    # ASSUMPTIONS:\n    # Each tile is 125 by 125 mm\n    monitor_sensor(\"front_distance.get_distance\", \"front_eye.near_object\", \"front_eye.brightness\", \"down_eye.detect\")\n    pen.move(DOWN)\n    drivetrain.turn_for(LEFT,90,DEGREES)\n    while True:\n        if down_eye.detect(RED) == False:\n            distance = front_distance.get_distance(MM)\n            if distance > 70:\n                drivetrain.drive_for(FORWARD, 250, MM)\n                drivetrain.turn_for(LEFT,90,DEGREES)\n            else:\n                drivetrain.turn_for(RIGHT,90,DEGREES)\n        wait(20,MSEC)\n    \n   \n\n    \n# VR threads â€” Do not delete\nvr_thread(main)","textLanguage":"python","robotConfig":[],"slot":0,"platform":"PG","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","minVersion":"3.0.0","fileFormat":"2.0.0","targetBrainGen":"First","v5SoundsEnabled":false,"playground":"DynamicWallMaze","robotModel":"vr"}